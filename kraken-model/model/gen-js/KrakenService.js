//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

Kraken.KrakenService_ping_args = function(args) {
};
Kraken.KrakenService_ping_args.prototype = {};
Kraken.KrakenService_ping_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ping_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ping_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ping_result = function(args) {
};
Kraken.KrakenService_ping_result.prototype = {};
Kraken.KrakenService_ping_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ping_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ping_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_args = function(args) {
};
Kraken.KrakenService_ListArticleSources_args.prototype = {};
Kraken.KrakenService_ListArticleSources_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArticleSources_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
Kraken.KrakenService_ListArticleSources_result.prototype = {};
Kraken.KrakenService_ListArticleSources_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.success = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new Kraken.ArticleSource();
          elem6.read(input);
          this.success.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArticleSources_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter7 in this.success)
    {
      if (this.success.hasOwnProperty(iter7))
      {
        iter7 = this.success[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
Kraken.KrakenService_ImportDocument_args.prototype = {};
Kraken.KrakenService_ImportDocument_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new Kraken.ImportDocumentRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ImportDocument_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_result = function(args) {
  this.success = null;
  this.validationError = null;
  if (args instanceof Kraken.ValidationError) {
    this.validationError = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.validationError !== undefined) {
      this.validationError = args.validationError;
    }
  }
};
Kraken.KrakenService_ImportDocument_result.prototype = {};
Kraken.KrakenService_ImportDocument_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Kraken.ImportDocumentResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.validationError = new Kraken.ValidationError();
        this.validationError.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ImportDocument_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.validationError !== null && this.validationError !== undefined) {
    output.writeFieldBegin('validationError', Thrift.Type.STRUCT, 1);
    this.validationError.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
Kraken.KrakenService_GetArticleSource_args.prototype = {};
Kraken.KrakenService_GetArticleSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new Kraken.GetArticleSourceRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArticleSource_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_result = function(args) {
  this.success = null;
  this.validationError = null;
  this.invalidArticleSourceIdNotFound = null;
  if (args instanceof Kraken.ValidationError) {
    this.validationError = args;
    return;
  }
  if (args instanceof Kraken.InvalidArticleSourceIdNotFound) {
    this.invalidArticleSourceIdNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.validationError !== undefined) {
      this.validationError = args.validationError;
    }
    if (args.invalidArticleSourceIdNotFound !== undefined) {
      this.invalidArticleSourceIdNotFound = args.invalidArticleSourceIdNotFound;
    }
  }
};
Kraken.KrakenService_GetArticleSource_result.prototype = {};
Kraken.KrakenService_GetArticleSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Kraken.ArticleSource();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.validationError = new Kraken.ValidationError();
        this.validationError.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.invalidArticleSourceIdNotFound = new Kraken.InvalidArticleSourceIdNotFound();
        this.invalidArticleSourceIdNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArticleSource_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.validationError !== null && this.validationError !== undefined) {
    output.writeFieldBegin('validationError', Thrift.Type.STRUCT, 1);
    this.validationError.write(output);
    output.writeFieldEnd();
  }
  if (this.invalidArticleSourceIdNotFound !== null && this.invalidArticleSourceIdNotFound !== undefined) {
    output.writeFieldBegin('invalidArticleSourceIdNotFound', Thrift.Type.STRUCT, 2);
    this.invalidArticleSourceIdNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArchiveDailyIndices_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field request is unset!');
    }
  }
};
Kraken.KrakenService_ListArchiveDailyIndices_args.prototype = {};
Kraken.KrakenService_ListArchiveDailyIndices_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new Kraken.ListArchiveDailyIndicesRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArchiveDailyIndices_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArchiveDailyIndices_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArchiveDailyIndices_result = function(args) {
  this.success = null;
  this.validationError = null;
  this.invalidArticleSourceIdNotFound = null;
  if (args instanceof Kraken.ValidationError) {
    this.validationError = args;
    return;
  }
  if (args instanceof Kraken.InvalidArticleSourceIdNotFound) {
    this.invalidArticleSourceIdNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.validationError !== undefined) {
      this.validationError = args.validationError;
    }
    if (args.invalidArticleSourceIdNotFound !== undefined) {
      this.invalidArticleSourceIdNotFound = args.invalidArticleSourceIdNotFound;
    }
  }
};
Kraken.KrakenService_ListArchiveDailyIndices_result.prototype = {};
Kraken.KrakenService_ListArchiveDailyIndices_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.success = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new Kraken.ArchiveDailyIndex();
          elem14.read(input);
          this.success.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.validationError = new Kraken.ValidationError();
        this.validationError.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.invalidArticleSourceIdNotFound = new Kraken.InvalidArticleSourceIdNotFound();
        this.invalidArticleSourceIdNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArchiveDailyIndices_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArchiveDailyIndices_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter15 in this.success)
    {
      if (this.success.hasOwnProperty(iter15))
      {
        iter15 = this.success[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.validationError !== null && this.validationError !== undefined) {
    output.writeFieldBegin('validationError', Thrift.Type.STRUCT, 1);
    this.validationError.write(output);
    output.writeFieldEnd();
  }
  if (this.invalidArticleSourceIdNotFound !== null && this.invalidArticleSourceIdNotFound !== undefined) {
    output.writeFieldBegin('invalidArticleSourceIdNotFound', Thrift.Type.STRUCT, 2);
    this.invalidArticleSourceIdNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field request is unset!');
    }
  }
};
Kraken.KrakenService_GetArchiveDailyIndex_args.prototype = {};
Kraken.KrakenService_GetArchiveDailyIndex_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new Kraken.GetArchiveDailyIndexRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArchiveDailyIndex_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_result = function(args) {
  this.success = null;
  this.validationError = null;
  this.invalidArticleSourceIdNotFound = null;
  if (args instanceof Kraken.ValidationError) {
    this.validationError = args;
    return;
  }
  if (args instanceof Kraken.InvalidArticleSourceIdNotFound) {
    this.invalidArticleSourceIdNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.validationError !== undefined) {
      this.validationError = args.validationError;
    }
    if (args.invalidArticleSourceIdNotFound !== undefined) {
      this.invalidArticleSourceIdNotFound = args.invalidArticleSourceIdNotFound;
    }
  }
};
Kraken.KrakenService_GetArchiveDailyIndex_result.prototype = {};
Kraken.KrakenService_GetArchiveDailyIndex_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Kraken.ArchiveDailyIndex();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.validationError = new Kraken.ValidationError();
        this.validationError.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.invalidArticleSourceIdNotFound = new Kraken.InvalidArticleSourceIdNotFound();
        this.invalidArticleSourceIdNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArchiveDailyIndex_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.validationError !== null && this.validationError !== undefined) {
    output.writeFieldBegin('validationError', Thrift.Type.STRUCT, 1);
    this.validationError.write(output);
    output.writeFieldEnd();
  }
  if (this.invalidArticleSourceIdNotFound !== null && this.invalidArticleSourceIdNotFound !== undefined) {
    output.writeFieldBegin('invalidArticleSourceIdNotFound', Thrift.Type.STRUCT, 2);
    this.invalidArticleSourceIdNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenServiceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
Kraken.KrakenServiceClient.prototype = {};
Kraken.KrakenServiceClient.prototype.ping = function(callback) {
  if (callback === undefined) {
    this.send_ping();
    this.recv_ping();
  } else {
    var postData = this.send_ping(true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_ping);
  }
};

Kraken.KrakenServiceClient.prototype.send_ping = function(callback) {
  this.output.writeMessageBegin('ping', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_ping_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_ping = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_ping_result();
  result.read(this.input);
  this.input.readMessageEnd();

  return;
};
Kraken.KrakenServiceClient.prototype.ListArticleSources = function(callback) {
  if (callback === undefined) {
    this.send_ListArticleSources();
    return this.recv_ListArticleSources();
  } else {
    var postData = this.send_ListArticleSources(true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_ListArticleSources);
  }
};

Kraken.KrakenServiceClient.prototype.send_ListArticleSources = function(callback) {
  this.output.writeMessageBegin('ListArticleSources', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_ListArticleSources_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_ListArticleSources = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_ListArticleSources_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'ListArticleSources failed: unknown result';
};
Kraken.KrakenServiceClient.prototype.ImportDocument = function(request, callback) {
  if (callback === undefined) {
    this.send_ImportDocument(request);
    return this.recv_ImportDocument();
  } else {
    var postData = this.send_ImportDocument(request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_ImportDocument);
  }
};

Kraken.KrakenServiceClient.prototype.send_ImportDocument = function(request, callback) {
  this.output.writeMessageBegin('ImportDocument', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_ImportDocument_args();
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_ImportDocument = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_ImportDocument_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.validationError) {
    throw result.validationError;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'ImportDocument failed: unknown result';
};
Kraken.KrakenServiceClient.prototype.GetArticleSource = function(request, callback) {
  if (callback === undefined) {
    this.send_GetArticleSource(request);
    return this.recv_GetArticleSource();
  } else {
    var postData = this.send_GetArticleSource(request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetArticleSource);
  }
};

Kraken.KrakenServiceClient.prototype.send_GetArticleSource = function(request, callback) {
  this.output.writeMessageBegin('GetArticleSource', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_GetArticleSource_args();
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_GetArticleSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_GetArticleSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.validationError) {
    throw result.validationError;
  }
  if (null !== result.invalidArticleSourceIdNotFound) {
    throw result.invalidArticleSourceIdNotFound;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetArticleSource failed: unknown result';
};
Kraken.KrakenServiceClient.prototype.ListArchiveDailyIndices = function(request, callback) {
  if (callback === undefined) {
    this.send_ListArchiveDailyIndices(request);
    return this.recv_ListArchiveDailyIndices();
  } else {
    var postData = this.send_ListArchiveDailyIndices(request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_ListArchiveDailyIndices);
  }
};

Kraken.KrakenServiceClient.prototype.send_ListArchiveDailyIndices = function(request, callback) {
  this.output.writeMessageBegin('ListArchiveDailyIndices', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_ListArchiveDailyIndices_args();
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_ListArchiveDailyIndices = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_ListArchiveDailyIndices_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.validationError) {
    throw result.validationError;
  }
  if (null !== result.invalidArticleSourceIdNotFound) {
    throw result.invalidArticleSourceIdNotFound;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'ListArchiveDailyIndices failed: unknown result';
};
Kraken.KrakenServiceClient.prototype.GetArchiveDailyIndex = function(request, callback) {
  if (callback === undefined) {
    this.send_GetArchiveDailyIndex(request);
    return this.recv_GetArchiveDailyIndex();
  } else {
    var postData = this.send_GetArchiveDailyIndex(request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetArchiveDailyIndex);
  }
};

Kraken.KrakenServiceClient.prototype.send_GetArchiveDailyIndex = function(request, callback) {
  this.output.writeMessageBegin('GetArchiveDailyIndex', Thrift.MessageType.CALL, this.seqid);
  var args = new Kraken.KrakenService_GetArchiveDailyIndex_args();
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

Kraken.KrakenServiceClient.prototype.recv_GetArchiveDailyIndex = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new Kraken.KrakenService_GetArchiveDailyIndex_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.validationError) {
    throw result.validationError;
  }
  if (null !== result.invalidArticleSourceIdNotFound) {
    throw result.invalidArticleSourceIdNotFound;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetArchiveDailyIndex failed: unknown result';
};
