//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = require('./kraken_types');
//HELPER FUNCTIONS AND STRUCTURES

Kraken.KrakenService_ping_args = function(args) {
};
Kraken.KrakenService_ping_args.prototype = {};
Kraken.KrakenService_ping_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ping_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ping_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ping_result = function(args) {
};
Kraken.KrakenService_ping_result.prototype = {};
Kraken.KrakenService_ping_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ping_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ping_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_args = function(args) {
};
Kraken.KrakenService_ListArticleSources_args.prototype = {};
Kraken.KrakenService_ListArticleSources_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArticleSources_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
Kraken.KrakenService_ListArticleSources_result.prototype = {};
Kraken.KrakenService_ListArticleSources_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.success = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.ArticleSource();
          elem6.read(input);
          this.success.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ListArticleSources_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ListArticleSources_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter7 in this.success)
    {
      if (this.success.hasOwnProperty(iter7))
      {
        iter7 = this.success[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
Kraken.KrakenService_GetArticleSource_args.prototype = {};
Kraken.KrakenService_GetArticleSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new ttypes.GetArticleSourceRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArticleSource_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.InvalidArticleSourceIdNotFound) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
Kraken.KrakenService_GetArticleSource_result.prototype = {};
Kraken.KrakenService_GetArticleSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ArticleSource();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.InvalidArticleSourceIdNotFound();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArticleSource_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArticleSource_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
Kraken.KrakenService_GetArchiveDailyIndex_args.prototype = {};
Kraken.KrakenService_GetArchiveDailyIndex_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new ttypes.GetArchiveDailyIndexRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArchiveDailyIndex_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.InvalidArticleSourceIdNotFound) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
Kraken.KrakenService_GetArchiveDailyIndex_result.prototype = {};
Kraken.KrakenService_GetArchiveDailyIndex_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ArchiveDailyIndex();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.InvalidArticleSourceIdNotFound();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_GetArchiveDailyIndex_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_GetArchiveDailyIndex_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_args = function(args) {
  this.articleSourceId = null;
  this.type = null;
  this.localDate = null;
  if (args) {
    if (args.articleSourceId !== undefined) {
      this.articleSourceId = args.articleSourceId;
    }
    if (args.type !== undefined) {
      this.type = args.type;
    }
    if (args.localDate !== undefined) {
      this.localDate = args.localDate;
    }
  }
};
Kraken.KrakenService_ImportDocument_args.prototype = {};
Kraken.KrakenService_ImportDocument_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.articleSourceId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.type = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.localDate = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_args.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ImportDocument_args');
  if (this.articleSourceId !== null && this.articleSourceId !== undefined) {
    output.writeFieldBegin('articleSourceId', Thrift.Type.STRING, 1);
    output.writeString(this.articleSourceId);
    output.writeFieldEnd();
  }
  if (this.type !== null && this.type !== undefined) {
    output.writeFieldBegin('type', Thrift.Type.STRING, 2);
    output.writeString(this.type);
    output.writeFieldEnd();
  }
  if (this.localDate !== null && this.localDate !== undefined) {
    output.writeFieldBegin('localDate', Thrift.Type.STRING, 3);
    output.writeString(this.localDate);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.InvalidArticleSourceIdNotFound) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
Kraken.KrakenService_ImportDocument_result.prototype = {};
Kraken.KrakenService_ImportDocument_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ImportedDocument();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.InvalidArticleSourceIdNotFound();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Kraken.KrakenService_ImportDocument_result.prototype.write = function(output) {
  output.writeStructBegin('KrakenService_ImportDocument_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

Kraken.KrakenServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
Kraken.KrakenServiceClient.prototype = {};
Kraken.KrakenServiceClient.prototype.seqid = function() { return this._seqid; }
Kraken.KrakenServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
Kraken.KrakenServiceClient.prototype.ping = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ping();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ping();
  }
};

Kraken.KrakenServiceClient.prototype.send_ping = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ping', Thrift.MessageType.CALL, this.seqid());
  var args = new Kraken.KrakenService_ping_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

Kraken.KrakenServiceClient.prototype.recv_ping = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new Kraken.KrakenService_ping_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
Kraken.KrakenServiceClient.prototype.ListArticleSources = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ListArticleSources();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ListArticleSources();
  }
};

Kraken.KrakenServiceClient.prototype.send_ListArticleSources = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ListArticleSources', Thrift.MessageType.CALL, this.seqid());
  var args = new Kraken.KrakenService_ListArticleSources_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

Kraken.KrakenServiceClient.prototype.recv_ListArticleSources = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new Kraken.KrakenService_ListArticleSources_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ListArticleSources failed: unknown result');
};
Kraken.KrakenServiceClient.prototype.GetArticleSource = function(request, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_GetArticleSource(request);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_GetArticleSource(request);
  }
};

Kraken.KrakenServiceClient.prototype.send_GetArticleSource = function(request) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('GetArticleSource', Thrift.MessageType.CALL, this.seqid());
  var args = new Kraken.KrakenService_GetArticleSource_args();
  args.request = request;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

Kraken.KrakenServiceClient.prototype.recv_GetArticleSource = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new Kraken.KrakenService_GetArticleSource_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('GetArticleSource failed: unknown result');
};
Kraken.KrakenServiceClient.prototype.GetArchiveDailyIndex = function(request, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_GetArchiveDailyIndex(request);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_GetArchiveDailyIndex(request);
  }
};

Kraken.KrakenServiceClient.prototype.send_GetArchiveDailyIndex = function(request) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('GetArchiveDailyIndex', Thrift.MessageType.CALL, this.seqid());
  var args = new Kraken.KrakenService_GetArchiveDailyIndex_args();
  args.request = request;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

Kraken.KrakenServiceClient.prototype.recv_GetArchiveDailyIndex = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new Kraken.KrakenService_GetArchiveDailyIndex_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('GetArchiveDailyIndex failed: unknown result');
};
Kraken.KrakenServiceClient.prototype.ImportDocument = function(articleSourceId, type, localDate, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ImportDocument(articleSourceId, type, localDate);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ImportDocument(articleSourceId, type, localDate);
  }
};

Kraken.KrakenServiceClient.prototype.send_ImportDocument = function(articleSourceId, type, localDate) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ImportDocument', Thrift.MessageType.CALL, this.seqid());
  var args = new Kraken.KrakenService_ImportDocument_args();
  args.articleSourceId = articleSourceId;
  args.type = type;
  args.localDate = localDate;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

Kraken.KrakenServiceClient.prototype.recv_ImportDocument = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new Kraken.KrakenService_ImportDocument_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ImportDocument failed: unknown result');
};
Kraken.KrakenServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
Kraken.KrakenServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

Kraken.KrakenServiceProcessor.prototype.process_ping = function(seqid, input, output) {
  var args = new Kraken.KrakenService_ping_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ping.length === 0) {
    Q.fcall(this._handler.ping)
      .then(function(result) {
        var result = new Kraken.KrakenService_ping_result({success: result});
        output.writeMessageBegin("ping", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Kraken.KrakenService_ping_result(err);
        output.writeMessageBegin("ping", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ping( function (err, result) {
      var result = new Kraken.KrakenService_ping_result((err != null ? err : {success: result}));
      output.writeMessageBegin("ping", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

Kraken.KrakenServiceProcessor.prototype.process_ListArticleSources = function(seqid, input, output) {
  var args = new Kraken.KrakenService_ListArticleSources_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ListArticleSources.length === 0) {
    Q.fcall(this._handler.ListArticleSources)
      .then(function(result) {
        var result = new Kraken.KrakenService_ListArticleSources_result({success: result});
        output.writeMessageBegin("ListArticleSources", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Kraken.KrakenService_ListArticleSources_result(err);
        output.writeMessageBegin("ListArticleSources", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ListArticleSources( function (err, result) {
      var result = new Kraken.KrakenService_ListArticleSources_result((err != null ? err : {success: result}));
      output.writeMessageBegin("ListArticleSources", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

Kraken.KrakenServiceProcessor.prototype.process_GetArticleSource = function(seqid, input, output) {
  var args = new Kraken.KrakenService_GetArticleSource_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.GetArticleSource.length === 1) {
    Q.fcall(this._handler.GetArticleSource, args.request)
      .then(function(result) {
        var result = new Kraken.KrakenService_GetArticleSource_result({success: result});
        output.writeMessageBegin("GetArticleSource", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Kraken.KrakenService_GetArticleSource_result(err);
        output.writeMessageBegin("GetArticleSource", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.GetArticleSource(args.request,  function (err, result) {
      var result = new Kraken.KrakenService_GetArticleSource_result((err != null ? err : {success: result}));
      output.writeMessageBegin("GetArticleSource", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

Kraken.KrakenServiceProcessor.prototype.process_GetArchiveDailyIndex = function(seqid, input, output) {
  var args = new Kraken.KrakenService_GetArchiveDailyIndex_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.GetArchiveDailyIndex.length === 1) {
    Q.fcall(this._handler.GetArchiveDailyIndex, args.request)
      .then(function(result) {
        var result = new Kraken.KrakenService_GetArchiveDailyIndex_result({success: result});
        output.writeMessageBegin("GetArchiveDailyIndex", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Kraken.KrakenService_GetArchiveDailyIndex_result(err);
        output.writeMessageBegin("GetArchiveDailyIndex", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.GetArchiveDailyIndex(args.request,  function (err, result) {
      var result = new Kraken.KrakenService_GetArchiveDailyIndex_result((err != null ? err : {success: result}));
      output.writeMessageBegin("GetArchiveDailyIndex", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

Kraken.KrakenServiceProcessor.prototype.process_ImportDocument = function(seqid, input, output) {
  var args = new Kraken.KrakenService_ImportDocument_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ImportDocument.length === 3) {
    Q.fcall(this._handler.ImportDocument, args.articleSourceId, args.type, args.localDate)
      .then(function(result) {
        var result = new Kraken.KrakenService_ImportDocument_result({success: result});
        output.writeMessageBegin("ImportDocument", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Kraken.KrakenService_ImportDocument_result(err);
        output.writeMessageBegin("ImportDocument", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ImportDocument(args.articleSourceId, args.type, args.localDate,  function (err, result) {
      var result = new Kraken.KrakenService_ImportDocument_result((err != null ? err : {success: result}));
      output.writeMessageBegin("ImportDocument", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

